<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CSVDataExchanger" Id="{68633b8e-fdaa-48b3-93bf-38a32a63cfa6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CSVDataExchanger IMPLEMENTS I_CSVDataExchanger
VAR	
	(* First cycle parameters *)
	sAmsNetId								: T_AmsNetId := '';							(* TwinCAT system network address *)
	sFileDir								: T_MaxString;								(* CSV source file directory *)
	sFileName 								: T_MaxString;								(* CSV source file name *)
	sFilePath								: T_MaxString;								(* CSV source file whole path *)
	bChangeSeparatorToComma					: BOOL;										(* CSV field separator *)

	(* VALUES TEMPORARY HARDCODED - until the file creation function will be implemented *)
	bCreateFile								: BOOL := FALSE; 							
	bAddHeader								: BOOL := FALSE;
	                                    	
	(* Current time *)                  	
	stTime									: TIMESTRUCT;	(*  *)
	sTime									: STRING;		(*  *)
	sFileDate								: STRING;		
	
	(* Function block status flags and parameters *)
	bActive									: BOOL;
	bBusy									: BOOL;
	bError									: BOOL;
	iErrorId								: UDINT;
	                                    	
	(* Temporary data holders and auxiliary variables *)        	
	sCSVLine								: T_MaxString := ''; 						(* Single CSV text line (row, record), we are using string as record buffer (your are able to see read fields)  *)
	sCSVField								: T_MaxString := ''; 						(* Single CSV field value (column, record field) *)
	iRow	 								: UDINT 	:= 0;							(* Row number (record) *)
	iColumn									: UDINT 	:= 0;							(* Column number (record field) *)
	iMaxNumberOfColumns						: UDINT		:= 0;							(* Maximum number of open file columns *)
	hFile									: UINT		:= 0;							(* File handle of the source file *)
	
	(* MS_SelectRow variables *)
	sFieldToString							: T_MaxString := ''; 						(* Single CSV field value converted to string format *)          
	sValueToSearch							: T_MaxString := ''; 						(* Searched value *)
	iColumnToSearch 						: UDINT;
	ptArrParsedString						: POINTER TO ARRAY[0..iMAX_CSV_COLUMNS - 1] OF STRING(iMAX_CSV_FIELD_LENGTH);	(* Target PLC database *)
	sRowResult								: STRING;

	(* MS_SelectAll variables *)		
	ptArrDatabase							: POINTER TO ARRAY[0..iMAX_CSV_ROWS - 1, 0..iMAX_CSV_COLUMNS - 1] OF STRING(iMAX_CSV_FIELD_LENGTH);	(* Target PLC database *)
	
	(* State machines *) 	
	eCSVDataExchangerState					: E_CSVDataExchangerState;
	eCSVDataExchangerSelectRowState			: E_CSVDataExchangerSelectRowState;			(* Current state of camera initialization *)
	eCSVDataExchangerSelectAllState			: E_CSVDataExchangerSelectAllState;
	eCSVDataExchangerInsertIntoTableState	: E_CSVDataExchangerInsertIntoTableState;
	eCSVDataExchangerInitState				: E_CSVDataExchangerInitState;
	eCSVDataExchangerCountColumnsState		: E_CSVDataExchangerCountColumnsState;
	eCSVDataExchangerSetNewPathState		: E_CSVDataExchangerSetNewPathState;
	
	(* Function blocks - file handling *)
	fbFileOpen								: FB_FileOpen;								(* Opens file *)
	fbFileClose								: FB_FileClose;								(* Closes file *)
	fbFileGets								: FB_FileGets;								(* Reads one record (line) *)
	fbReader								: FB_CSVMemBufferReader;					(* Helper function block used to parse CSV data bytes (single record line) *)
	fbFilePuts								: FB_FilePuts;								(* Writes one record (line) *)
	fbWriter								: FB_CSVMemBufferWriter;					(* Helper function block used to create CSV data bytes (single record line) *)
  	fbCreateDir								: FB_CreateDir;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[bActive := eCSVDataExchangerState >= CSV_DATA_EXCHANGER_READY;

IF fbMachineTime.bValid THEN
	stTime := fbMachineTime.systemTime;
	sTime := SYSTEMTIME_TO_STRING(stTime);
	
END_IF

StateMachine();]]></ST>
    </Implementation>
    <Folder Name="FirstCycle" Id="{897b1540-f351-4729-a818-b98e0110ee3f}" />
    <Folder Name="Internal" Id="{15dc8626-2ac0-40ec-8218-686c52f87c11}" />
    <Folder Name="Properties" Id="{7c8c3637-5b58-45ab-8472-cc81322b7249}">
      <Folder Name="Parameters" Id="{91f728a3-89f1-4639-b2ef-c6c093f3c031}" />
      <Folder Name="Status" Id="{1ace03f3-d618-4762-90de-1a771e0305de}" />
    </Folder>
    <Folder Name="Requests" Id="{0dc97ec0-4bd6-4161-b4a2-653f4f5b69c7}" />
    <Folder Name="StateMachine" Id="{302fcf72-adbf-4ef8-a350-95e79386cd97}" />
    <Property Name="Active" Id="{049c6137-1b3f-4f79-8d2a-f31386f4ec57}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Active : REFERENCE TO BOOL
]]></Declaration>
      <Get Name="Get" Id="{b7b20cd3-3726-4e34-aac2-c92099d05df7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Active REF= bActive;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Busy" Id="{b3b5873e-e4b8-4b82-9b10-12cc2c3a2cc9}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Busy : REFERENCE TO BOOL
]]></Declaration>
      <Get Name="Get" Id="{bc5c54f0-fe7e-4a50-bddb-d33d57a0f82f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy REF= bBusy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{847cebb0-f602-48ba-b658-15c0712d6599}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Error : REFERENCE TO BOOL
]]></Declaration>
      <Get Name="Get" Id="{aedce89c-7f8b-4922-91a7-d723fd52c290}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error REF= bError;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorID" Id="{bdaf7443-210c-46be-8be1-ad8bdfea66eb}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY ErrorID : REFERENCE TO UDINT
]]></Declaration>
      <Get Name="Get" Id="{84f08044-9aaf-4ec0-a863-c85d6ba2e6cc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ErrorID REF= iErrorID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="FileDir" Id="{7d825f53-f1e2-4e7d-848f-db41800deaaf}" FolderPath="Properties\Parameters\">
      <Declaration><![CDATA[PROPERTY FileDir : STRING]]></Declaration>
      <Get Name="Get" Id="{065f697c-07b3-4f16-84d4-0bacc9d9bf92}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FileDir := sFileDir;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{80d560e8-4b8e-475a-bc19-346e7cda5632}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sFileDir := FileDir;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="FileName" Id="{66c720e0-764e-4826-a1e9-e6b7a9f191b4}" FolderPath="Properties\Parameters\">
      <Declaration><![CDATA[PROPERTY FileName : STRING]]></Declaration>
      <Get Name="Get" Id="{b74c3610-7d87-433f-8781-edc760682400}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FileName := sFileName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{cd0498c2-e4b8-481b-b4b1-05dd2d3c9315}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sFileName := FileName;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="M_CountMaxNumberOfColumns" Id="{20d30c4f-df03-4a73-aef9-0862be7a9387}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_CountMaxNumberOfColumns : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eCSVDataExchangerCountColumnsState OF
	CSV_DATA_EXCHANGER_COUNT_COLUMNS_OPEN_FILE:
		M_CountMaxNumberOfColumns := FALSE;
		
		hFile	:= 0;
		iRow	:= 0;
		iColumn	:= 0;
		sCSVField := '';
		sCSVLine := '';
		fbFileOpen(bExecute := FALSE);
		
		fbFileOpen(sNetId := sAmsNetId, 
					sPathName := sFilePath,
					nMode := FOPEN_MODEREAD OR FOPEN_MODETEXT,(* Open file in TEXT mode! *)
					ePath := PATH_GENERIC, bExecute := TRUE );
					
		eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_WAIT_FOR_OPENING;

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_WAIT_FOR_OPENING:
		fbFileOpen(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId, 
					hFile => hFile );
					
		IF NOT fbFileOpen.bBusy THEN
			IF NOT fbFileOpen.bError THEN
				eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_READ_SINGLE_LINE;
				
			ELSE(* Error: file not found? *)
				eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_READING_DONE;
				
			END_IF
		END_IF

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_READ_SINGLE_LINE:
		fbFileGets(bExecute := FALSE);
		
		fbFileGets(sNetId := sAmsNetId, 
					hFile := hFile, 
					bExecute := TRUE);
					
		eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_WAIT_FOR_READING;

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_WAIT_FOR_READING:
		fbFileGets(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId, 
					sLine => sCSVLine );
		
		IF NOT fbFileGets.bBusy THEN
			IF NOT fbFileGets.bError THEN
				IF NOT fbFileGets.bEOF THEN
					(* FB_FileGets returns text line without the CR (carriage return) character.
					We have to restore the CR character (replace the $L character with $R$L characters) *)
					IF RIGHT( sCSVLine, 1 ) = '$L' THEN
						sCSVLine := REPLACE(sCSVLine, '$R$L', 2, LEN(sCSVLine));
						
					END_IF
					eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_COUNT;
					
				END_IF
			ELSE(* Error *)
				eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_READING_DONE;
				
			END_IF
		END_IF

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_COUNT:
		fbReader.eCmd := eEnumCmd_First;(* Read first field value *)
		
		REPEAT
			fbReader(pBuffer := ADR(sCSVLine), 
						cbBuffer := SIZEOF(sCSVLine), 
						getValue => sCSVField);
						
			IF fbReader.bOk THEN
				fbReader.eCmd := eEnumCmd_Next;(* Read next field value *)
				
				iColumn := iColumn + 1;(* Increment number of read columns *)
				
				IF fbReader.bCRLF THEN(* CRLF == TRUE => End of reacord reached *)
					iMaxNumberOfColumns := iColumn;(* Reset number of columns *)
					
				END_IF
			ELSE(* Error: End of record reached or all fields read *)
				eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_CLOSE_FILE;
				
			END_IF
		UNTIL NOT fbReader.bOk
		END_REPEAT

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_CLOSE_FILE:
		fbFileClose(bExecute := FALSE);
		
		fbFileClose(sNetId := sAmsNetId, 
					hFile := hFile, 
					bExecute := TRUE );
					
		eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_WAIT_FOR_CLOSING;

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_WAIT_FOR_CLOSING:
		fbFileClose(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId);
		
		IF NOT fbFileClose.bBusy THEN
			hFile := 0;
			eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_READING_DONE;
			
		END_IF

	CSV_DATA_EXCHANGER_COUNT_COLUMNS_READING_DONE:
		IF (hFile <> 0) THEN
			eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_CLOSE_FILE;
			
		ELSE
			hFile	:= 0;
			iRow	:= 0;
			iColumn	:= 0;
			sCSVField := '';
			sCSVLine := '';
			M_CountMaxNumberOfColumns := TRUE;
			eCSVDataExchangerCountColumnsState := CSV_DATA_EXCHANGER_COUNT_COLUMNS_OPEN_FILE;
			
		END_IF

END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_FieldSeparator" Id="{493886f1-c2a4-4dfc-b95d-1c19bec84f04}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_FieldSeparator : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bChangeSeparatorToComma THEN
	DEFAULT_CSV_FIELD_SEP := 16#2C;(* Comma ASCII code *)
	
ELSE
	DEFAULT_CSV_FIELD_SEP := 16#3B;(* Semicolon ASCII code *)
	
END_IF

M_FieldSeparator := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_FileProperties" Id="{ca620c78-cf83-43cf-8a78-37dd2dad4295}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_FileProperties : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bCreateFile THEN
	bAddHeader := FALSE;

END_IF

M_FileProperties := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ResetParameters" Id="{5f241108-1e9d-4d79-a2e9-7d2cb9e02578}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_ResetParameters : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbCreateDir(bExecute := FALSE);
fbFileOpen(bExecute := FALSE);
fbFilePuts(bExecute := FALSE);
fbFileClose(bExecute := FALSE);
fbFileGets(bExecute := FALSE);	

iRow := 0;
iColumn := 0;
hFile := 0;
sCSVField := '';
sCSVLine := '';
sFieldToString	:= '';
sValueToSearch := '';
iColumnToSearch := 0;
sRowResult := '';

stTime.wDay 			:= 0;
stTime.wDayOfWeek 		:= 0;
stTime.wHour 			:= 0;
stTime.wMilliseconds 	:= 0;
stTime.wMinute 			:= 0;
stTime.wMonth 			:= 0;
stTime.wSecond 			:= 0;
stTime.wYear 			:= 0;

bError 		:= FALSE;
iErrorID 	:= 0;

eCSVDataExchangerInitState					:= 0;
eCSVDataExchangerSelectAllState				:= 0;
eCSVDataExchangerInsertIntoTableState		:= 0;

M_ResetParameters := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SetNewPath" Id="{8874c5d2-1826-43b8-b523-2bd40d282bc9}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_SetNewPath : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eCSVDataExchangerSetNewPathState OF
	CSV_DATA_EXCHANGER_SET_NEW_PATH_CHANGE_PATH:
		M_SetNewPath := FALSE;
		sFilePath := CONCAT(STR1 := sFileDir, STR2 := sFileName);
		sFilePath := CONCAT(STR1 := sFilePath, STR2 := WSTRING_TO_STRING(".csv"));
		
		iMaxNumberOfColumns := 0;
		eCSVDataExchangerSetNewPathState := CSV_DATA_EXCHANGER_SET_NEW_PATH_COUNT_FILE_COLUMNS;
	
	CSV_DATA_EXCHANGER_SET_NEW_PATH_COUNT_FILE_COLUMNS:
		IF M_CountMaxNumberOfColumns() THEN
			M_SetNewPath := TRUE;
			eCSVDataExchangerSetNewPathState := CSV_DATA_EXCHANGER_SET_NEW_PATH_CHANGE_PATH;
			
		END_IF
		
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Abort" Id="{140073f5-3184-4b50-bb00-439ddbd780fb}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState >= CSV_DATA_EXCHANGER_READY THEN
	bBusy := TRUE;
	MR_Abort := FALSE;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_ABORTING;
	
ELSIF eCSVDataExchangerState = CSV_DATA_EXCHANGER_UNINITIALIZED THEN
	bBusy := FALSE;
	MR_Abort := TRUE;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_CreateTable" Id="{c864b087-cc23-405e-aaa2-e30037f2c8da}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_CreateTable : BOOL
VAR_INPUT
	sFileName 								: T_MaxString;					(*  *)
	bAddHeader								: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[sCreateFilePath := CONCAT(STR1 := sFileDir, STR2 := sFileName);

]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_FirstCycle" Id="{87f4fa2e-3954-4976-a5c7-a6f8fc9f6b1a}" FolderPath="FirstCycle\">
      <Declaration><![CDATA[METHOD MR_FirstCycle : BOOL
VAR_INPUT
	sAmsNetId					: T_AmsNetId;	(* TwinCAT system network address *)
	sFileDir					: T_MaxString;	(* CSV source file path *)
	sFileName 					: T_MaxString;	(* CSV source file name *)
//	bCreateFile					: BOOL;			(* If true FB will create file under given path *)
//	bAddHeader					: BOOL;			(* If true there will be a header at the beginning of the doc *)
	bChangeSeparatorToComma		: BOOL;			(* In USA/UK the CSV field separator is a comma. In Germany and some other 
												   European countries the CSV field separator is a semicolon. *)
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.sAmsNetId := sAmsNetId;
THIS^.sFileDir := sFileDir;
THIS^.sFileName := sFileName;
THIS^.bChangeSeparatorToComma := bChangeSeparatorToComma;
//THIS^.bCreateFile := bCreateFile;
//THIS^.bAddHeader := bAddHeader;

M_FieldSeparator();
M_SetNewPath();
//M_FileProperties();

]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Init" Id="{e57d98df-9996-4aae-b64e-869a3b6ab6d2}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Init : BOOL
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState = CSV_DATA_EXCHANGER_UNINITIALIZED THEN
	bBusy := TRUE;
	MR_Init := FALSE;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_INITIALIZING;
	
ELSIF eCSVDataExchangerState >= CSV_DATA_EXCHANGER_READY THEN
	bBusy := FALSE;
	MR_Init := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_InsertIntoTable" Id="{28d4c63d-ce5d-4525-b6b8-7ff5305fec83}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_InsertIntoTable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bWrite THEN
	bWrite 	:= FALSE;
	bBusy 	:= TRUE;
	bError	:= FALSE;
	nErrId	:= 0;
	hFile	:= 0;
	nRow	:= 0;
	nColumn	:= 0;
	step 	:= 1;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_ParseString" Id="{a032a73f-03fd-4dbf-aeac-8055720d87b1}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_ParseString : BOOL
VAR_INPUT
	iColumnToParse			: UDINT;
	sStringToParse 			: STRING;
	iArrParsedStringAdr 	: PVOID;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState = CSV_DATA_EXCHANGER_IDLE THEN
	bBusy := TRUE;
	MR_ParseString := FALSE;
	THIS^.iColumnToParse := iColumnToParse;
	THIS^.sStringToParse := sStringToParse;
	ptArrParsedString := iArrParsedStringAdr;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_PARSE_STRING;
	
ELSIF eCSVDataExchangerState = CSV_DATA_EXCHANGER_METHOD_DONE THEN
	bBusy := FALSE;
	MR_ParseString := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Reset" Id="{2ed83ece-424d-4ee9-a973-c7f6f86b448a}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState >= CSV_DATA_EXCHANGER_IDLE AND eCSVDataExchangerState <> CSV_DATA_EXCHANGER_METHOD_DONE THEN
	bBusy := TRUE;
	MR_Reset := FALSE;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_RESET;
	
ELSIF eCSVDataExchangerState = CSV_DATA_EXCHANGER_METHOD_DONE THEN
	bBusy := FALSE;
	MR_Reset := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_SelectAll" Id="{747e0d82-35c1-4151-8a8a-68a086638011}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_SelectAll : BOOL
VAR_INPUT
	iArrDataBaseAdr 		: PVOID; 		(* A pointer to the string array where the 100 records (max.) from CSV file table are stored *)
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState = CSV_DATA_EXCHANGER_IDLE THEN
	bBusy := TRUE;
	MR_SelectAll := FALSE;
	ptArrDatabase := iArrDataBaseAdr;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_SELECT_ALL;
	
ELSIF eCSVDataExchangerState = CSV_DATA_EXCHANGER_METHOD_DONE THEN
	bBusy := FALSE;
	MR_SelectAll := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_SelectPath" Id="{73e78ed8-629d-40fb-bebc-a43bf2b55bbb}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_SelectPath : BOOL
VAR_INPUT
	sFileDir								: T_MaxString; 			(* CSV source file directory name *)
	sFileName 								: T_MaxString; 			(* CSV source file name *)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState = CSV_DATA_EXCHANGER_IDLE THEN
	THIS^.sFileDir := sFileDir;	
	THIS^.sFileName := sFileName;	
	bBusy := TRUE;
	MR_SelectPath := FALSE;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_SELECT_PATH;
	
ELSIF eCSVDataExchangerState = CSV_DATA_EXCHANGER_METHOD_DONE THEN
	bBusy := FALSE;
	MR_SelectPath := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_SelectRow" Id="{021a1d9a-b3b4-48f0-b2e6-27c85f9b9d31}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_SelectRow : BOOL
VAR_INPUT
	iColumnToSearch 			: UDINT;		(* Column number to search the value in; columns are counted from 1 *)
	sValueToSearch				: STRING;		(* Value that you are looking for *)
	iArrParsedStringAdr 		: PVOID;		(* A pointer to the string array where the matched row with the search value is stored as a string array *)
END_VAR

VAR_OUTPUT
	sRowResult					: STRING;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eCSVDataExchangerState = CSV_DATA_EXCHANGER_IDLE THEN
	THIS^.sValueToSearch := sValueToSearch;
	IF iColumnToSearch > iMaxNumberOfColumns THEN
		iColumnToSearch := iMaxNumberOfColumns;
		
	END_IF
	THIS^.iColumnToSearch := iColumnToSearch - 1;
	THIS^.ptArrParsedString := iArrParsedStringAdr;
	bBusy := TRUE;
	MR_SelectRow := FALSE;
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_SELECT_ROW;
	
ELSIF eCSVDataExchangerState = CSV_DATA_EXCHANGER_METHOD_DONE THEN
	sRowResult := THIS^.sRowResult;
	bBusy := FALSE;
	MR_SelectRow := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Aborting" Id="{db8a976e-5674-4493-9992-9e5ecaa351fa}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Aborting
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF M_ResetParameters() THEN
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_UNINITIALIZED;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Idle" Id="{7d1ee98e-1eea-4eb0-93fe-152b5a80750c}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Idle
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Initializing" Id="{e59f5e00-013c-4927-8680-b9ed96d486b6}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Initializing //C:\TwinCAT\log\filelog.txt
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eCSVDataExchangerInitState OF
	CSV_DATA_EXCHANGER_INIT_CREATE_DIR:
		IF bCreateFile THEN
			fbCreateDir(sNetId 		:= sAmsNetId,
						sPathName 	:= sFileDir,
						bExecute 	:= TRUE,
						tTimeout 	:= DEFAULT_ADS_TIMEOUT);
							
			IF NOT fbCreateDir.bBusy THEN
				eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_GET_TIME;
				fbCreateDir(bExecute := FALSE);
				
			END_IF
		ELSE
			eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_DONE;
			
		END_IF
		
	CSV_DATA_EXCHANGER_INIT_GET_TIME:
		IF fbMachineTime.bValid THEN
			stTime := fbMachineTime.systemTime;
			sTime := SYSTEMTIME_TO_STRING(stTime);
			sFileDate := LEFT(sTime,10);
			eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_CREATE_FILE;
			
		END_IF
		
	CSV_DATA_EXCHANGER_INIT_CREATE_FILE:
		IF NOT fbFileOpen.bError THEN
			fbFileOpen(sNetId 		:= sAmsNetId,
						//sPathName 	:= FUN_MergeStrings5(sPathName,'','_',LEFT(sTime,10),'.csv'),
						sPathName 	:= sFilePath,
						bExecute 	:= TRUE,
						tTimeout	:= DEFAULT_ADS_TIMEOUT,
						nMode		:= FOPEN_MODEAPPEND OR FOPEN_MODEPLUS);
							
			IF NOT fbFileOpen.bBusy THEN
				hFile := fbFileOpen.hFile;
				fbFileOpen(bExecute := FALSE);		
				
				IF bAddHeader THEN 
					eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_ADD_HEADER;
					
				ELSE
					eCSVDataExchangerInitState :=CSV_DATA_EXCHANGER_INIT_CLOSE_FILE;
					
				END_IF							
			END_IF
		ELSE
			bError := fbFileOpen.bError;
			iErrorID := fbFileOpen.nErrId;
			fbFileOpen(bExecute := FALSE);
			
		END_IF
		
	CSV_DATA_EXCHANGER_INIT_ADD_HEADER:
		IF NOT fbFilePuts.bError THEN
			fbFilePuts(	sNetId := sAmsNetId,
						hFile := hFile,
						sLine := CONCAT('----- Logger file initialized at ',CONCAT(LEFT(sTime,23),' ----- $n')),
						bExecute := TRUE,
						tTimeout := DEFAULT_ADS_TIMEOUT);

			IF NOT fbFilePuts.bBusy THEN
				eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_CLOSE_FILE;
				fbFilePuts( bExecute := FALSE);
				
			END_IF	
		ELSE
			bError := fbFilePuts.bError;
			iErrorID := fbFilePuts.nErrId;
			fbFilePuts( bExecute := FALSE);
			
		END_IF
	
	CSV_DATA_EXCHANGER_INIT_CLOSE_FILE:
		IF NOT fbFileClose.bError THEN
			fbFileClose( sNetId 		:= sAmsNetId,
							hFile 		:= hFile,
							bExecute 	:= TRUE,
							tTimeout 	:= DEFAULT_ADS_TIMEOUT);
							
			IF NOT fbFileClose.bBusy THEN
				fbFileClose( bExecute := FALSE);
				eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_DONE;

			END_IF
		ELSE
			fbFileClose(bExecute := FALSE);
			bError := fbFileClose.bError;
			iErrorID := fbFileClose.nErrId;
			
		END_IF
	
	CSV_DATA_EXCHANGER_INIT_DONE:
		IF M_CountMaxNumberOfColumns() THEN
			eCSVDataExchangerInitState := CSV_DATA_EXCHANGER_INIT_CREATE_DIR;
			eCSVDataExchangerState := CSV_DATA_EXCHANGER_READY;
			
		END_IF
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_MethodDone" Id="{c40775fb-ae39-4ec2-a1de-4855a7864c01}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD MS_MethodDone : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bBusy THEN
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_IDLE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Ready" Id="{8b3ef1ac-acc2-4ed3-a5a6-f3c33dacb8ea}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Ready
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[eCSVDataExchangerState := CSV_DATA_EXCHANGER_IDLE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Reset" Id="{a4434b2a-49b1-4a36-af38-050c03faedf4}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF M_ResetParameters() THEN
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_METHOD_DONE;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_SelectAll" Id="{bd74e63d-fe38-4c51-8396-498fca0061c3}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD MS_SelectAll : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eCSVDataExchangerSelectAllState OF
	CSV_DATA_EXCHANGER_SELECT_ALL_OPEN_FILE:
		hFile	:= 0;
		iRow	:= 0;
		iColumn	:= 0;
		fbFileOpen(bExecute := FALSE);
		
		fbFileOpen(sNetId := sAmsNetId, 
					sPathName := sFilePath,
					nMode := FOPEN_MODEREAD OR FOPEN_MODETEXT,(* Open file in TEXT mode! *)
					ePath := PATH_GENERIC, bExecute := TRUE );
					
		eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_WAIT_FOR_OPENING;

	CSV_DATA_EXCHANGER_SELECT_ALL_WAIT_FOR_OPENING:
		fbFileOpen(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId, 
					hFile => hFile );
					
		IF NOT fbFileOpen.bBusy THEN
			IF NOT fbFileOpen.bError THEN
				eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_READ_SINGLE_LINE;
				
			ELSE(* Error: file not found? *)
				eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_READING_DONE;
				
			END_IF
		END_IF

	CSV_DATA_EXCHANGER_SELECT_ALL_READ_SINGLE_LINE:
		fbFileGets(bExecute := FALSE);
		
		fbFileGets(sNetId := sAmsNetId, 
					hFile := hFile, 
					bExecute := TRUE);
					
		eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_WAIT_FOR_READING;

	CSV_DATA_EXCHANGER_SELECT_ALL_WAIT_FOR_READING:
		fbFileGets(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId, 
					sLine => sCSVLine );
		
		IF NOT fbFileGets.bBusy THEN
			IF NOT fbFileGets.bError THEN
				IF fbFileGets.bEOF THEN
					eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_CLOSE_FILE; (* End of file reached => Close source file *)
				
				ELSE
					(* FB_FileGets returns text line without the CR (carriage return) character.
					We have to restore the CR character (replace the $L character with $R$L characters) *)
					IF RIGHT( sCSVLine, 1 ) = '$L' THEN
						sCSVLine := REPLACE(sCSVLine, '$R$L', 2, LEN(sCSVLine));
						
					END_IF
					eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_PARSE_SINGLE_LINE;
					
				END_IF
			ELSE(* Error *)
				eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_READING_DONE;
				
			END_IF
		END_IF

	CSV_DATA_EXCHANGER_SELECT_ALL_PARSE_SINGLE_LINE:
		fbReader.eCmd := eEnumCmd_First;(* Read first field value *)
		
		REPEAT
			fbReader(pBuffer := ADR(sCSVLine), 
						cbBuffer := SIZEOF(sCSVLine), 
						getValue => sCSVField);
						
			IF fbReader.bOk THEN
				fbReader.eCmd := eEnumCmd_Next;(* Read next field value *)

				IF iRow <= iMAX_CSV_ROWS AND iColumn <= iMAX_CSV_COLUMNS THEN
						ptArrDatabase^[iRow, iColumn] := CSVFIELD_TO_STRING(sCSVField, FALSE);(* TODO: Save or use the field value in your application *)
						
				END_IF
				
				iColumn := iColumn + 1;(* Increment number of read columns *)
				
				IF fbReader.bCRLF THEN(* CRLF == TRUE => End of reacord reached *)
					iRow := iRow + 1;(* Increment number of read records *)
					iColumn 	:= 0;(* Reset number of columns *)
					iRow := iRow MOD iMAX_CSV_ROWS;
					
				END_IF
			ELSE(* Error: End of record reached or all fields read *)
				eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_READ_SINGLE_LINE;
				
			END_IF
		UNTIL NOT fbReader.bOk
		END_REPEAT

	CSV_DATA_EXCHANGER_SELECT_ALL_CLOSE_FILE:
		fbFileClose(bExecute := FALSE);
		
		fbFileClose(sNetId := sAmsNetId, 
					hFile := hFile, 
					bExecute := TRUE );
					
		eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_WAIT_FOR_CLOSING;

	CSV_DATA_EXCHANGER_SELECT_ALL_WAIT_FOR_CLOSING:
		fbFileClose(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId);
		
		IF NOT fbFileClose.bBusy THEN
			hFile := 0;
			eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_READING_DONE;
			
		END_IF

	CSV_DATA_EXCHANGER_SELECT_ALL_READING_DONE:
		IF (hFile <> 0) THEN
			eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_CLOSE_FILE;
			
		ELSE
			eCSVDataExchangerSelectAllState := CSV_DATA_EXCHANGER_SELECT_ALL_OPEN_FILE;
			eCSVDataExchangerState := CSV_DATA_EXCHANGER_METHOD_DONE;
			
		END_IF

END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_SelectPath" Id="{e7b6f48a-3775-4fe4-86cb-bc1595a78aea}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD MS_SelectPath : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF M_SetNewPath() THEN
	eCSVDataExchangerState := CSV_DATA_EXCHANGER_METHOD_DONE;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_SelectRow" Id="{e9c3c6b5-cf50-4f4c-bc91-a3315d34bbd3}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD MS_SelectRow : BOOL
VAR
	iLoop 				: UDINT;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eCSVDataExchangerSelectRowState OF
	CSV_DATA_EXCHANGER_SELECT_ROW_OPEN_FILE:
		sRowResult := ' ';
		hFile	:= 0;
		iRow	:= 0;
		iColumn	:= 0;
		fbFileOpen(bExecute := FALSE);
		
		fbFileOpen(sNetId := sAmsNetId, 
					sPathName := sFilePath,
					nMode := FOPEN_MODEREAD OR FOPEN_MODETEXT,(* Open file in TEXT mode! *)
					ePath := PATH_GENERIC, bExecute := TRUE );
					
		eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_WAIT_FOR_OPENING;

	CSV_DATA_EXCHANGER_SELECT_ROW_WAIT_FOR_OPENING:
		fbFileOpen(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId, 
					hFile => hFile );
					
		IF NOT fbFileOpen.bBusy THEN
			IF NOT fbFileOpen.bError THEN
				eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_READ_SINGLE_LINE;
				
			ELSE(* Error: file not found? *)
				eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_READING_DONE;
				
			END_IF
		END_IF

	CSV_DATA_EXCHANGER_SELECT_ROW_READ_SINGLE_LINE:
		fbFileGets(bExecute := FALSE);
		
		fbFileGets(sNetId := sAmsNetId, 
					hFile := hFile, 
					bExecute := TRUE);
					
		eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_WAIT_FOR_READING;

	CSV_DATA_EXCHANGER_SELECT_ROW_WAIT_FOR_READING:
		fbFileGets(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId, 
					sLine => sCSVLine );
		
		IF NOT fbFileGets.bBusy THEN
			IF NOT fbFileGets.bError THEN
				IF fbFileGets.bEOF THEN
					eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_CLOSE_FILE; (* End of file reached => Close source file *)
				
				ELSE
					(* FB_FileGets returns text line without the CR (carriage return) character.
					We have to restore the CR character (replace the $L character with $R$L characters) *)
					IF RIGHT( sCSVLine, 1 ) = '$L' THEN
						sCSVLine := REPLACE(sCSVLine, '$R$L', 2, LEN(sCSVLine));
						
					END_IF
					eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_PARSE_SINGLE_LINE;
					
				END_IF
			ELSE(* Error *)
				eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_READING_DONE;
				
			END_IF
		END_IF

	CSV_DATA_EXCHANGER_SELECT_ROW_PARSE_SINGLE_LINE:
		fbReader.eCmd := eEnumCmd_First;(* Read first field value *)
		WHILE iColumn <= iColumnToSearch - 1 DO 
			fbReader(pBuffer := ADR(sCSVLine), 
			cbBuffer := SIZEOF(sCSVLine), 
			getValue => sCSVField);
			
			ptArrParsedString^[iColumn] := sCSVField;
			
			IF fbReader.bOk THEN
				iColumn := iColumn + 1;
				fbReader.eCmd := eEnumCmd_Next;(* Read next field value *)
			END_IF
			
		END_WHILE
		
		REPEAT
			fbReader(pBuffer := ADR( sCSVLine ), cbBuffer := SIZEOF( sCSVLine ), getValue => sCSVField);
			
			IF fbReader.bOk THEN
				fbReader.eCmd := eEnumCmd_Next;(* Read next field value *)
				
				sFieldToString := CSVFIELD_TO_STRING(sCSVField, FALSE);(* TODO: Save or use the field value in your application *)

				IF iRow <= iMAX_CSV_ROWS AND iColumn = iColumnToSearch AND sFieldToString = sValueToSearch THEN
					sRowResult := sCSVLine;
						
				END_IF
				
				ptArrParsedString^[iColumn] := sCSVField;
				iColumn := iColumn + 1;(* Increment number of read columns *)
				IF fbReader.bCRLF THEN(* CRLF == TRUE => End of reacord reached *)
					iRow := iRow + 1;(* Increment number of read records *)
					iColumn := 0;
					iRow := iRow MOD iMAX_CSV_ROWS;
					
				END_IF

			ELSE(* Error: End of record reached or all fields read *)
				IF (sRowResult = ' ') THEN
					eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_READ_SINGLE_LINE;
					
				ELSE
					eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_CLOSE_FILE;
					
				END_IF
			END_IF
		UNTIL NOT fbReader.bOk
		END_REPEAT

	CSV_DATA_EXCHANGER_SELECT_ROW_CLOSE_FILE:
		fbFileClose(bExecute := FALSE);
		
		fbFileClose(sNetId := sAmsNetId, 
					hFile := hFile, 
					bExecute := TRUE );
					
		eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_WAIT_FOR_CLOSING;

	CSV_DATA_EXCHANGER_SELECT_ROW_WAIT_FOR_CLOSING:
		fbFileClose(bExecute := FALSE, 
					bError => bError, 
					nErrID => iErrorId);
		
		IF NOT fbFileClose.bBusy THEN
			hFile := 0;
			eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_READING_DONE;
			
		END_IF

	CSV_DATA_EXCHANGER_SELECT_ROW_READING_DONE:
		IF (hFile <> 0) THEN
			eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_CLOSE_FILE;
			
		ELSE
			eCSVDataExchangerSelectRowState := CSV_DATA_EXCHANGER_SELECT_ROW_OPEN_FILE;
			eCSVDataExchangerState := CSV_DATA_EXCHANGER_METHOD_DONE;
			
		END_IF

END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Uninitialized" Id="{590bdb28-be1e-44bb-9afe-bac89c0b1958}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Uninitialized 
]]></Declaration>
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateMachine" Id="{f67386a0-662e-4524-8cd5-06e5fb499a4c}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED StateMachine
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eCSVDataExchangerState OF
	CSV_DATA_EXCHANGER_UNINITIALIZED:
		MS_Uninitialized();
		
	CSV_DATA_EXCHANGER_INITIALIZING:
		MS_Initializing();
		
	CSV_DATA_EXCHANGER_READY:
		MS_Ready();
		
	CSV_DATA_EXCHANGER_IDLE:
		MS_Idle();
		
	CSV_DATA_EXCHANGER_SELECT_ALL:
		MS_SelectAll();
	
//	CSV_DATA_EXCHANGER_INSERT_INTO_TABLE:
//		MS_InsertIntoTable();

	CSV_DATA_EXCHANGER_SELECT_ROW:
		MS_SelectRow();
	
	CSV_DATA_EXCHANGER_SELECT_PATH:
		MS_SelectPath();

//	CSV_DATA_EXCHANGER_PARSE_STRING:
//		MS_ParseString();
		
	CSV_DATA_EXCHANGER_RESET:
		MS_Reset();
		
	CSV_DATA_EXCHANGER_METHOD_DONE:
		MS_MethodDone();	

	CSV_DATA_EXCHANGER_ABORTING:
		MS_Aborting();		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CSVDataExchanger">
      <LineId Id="371" Count="4" />
      <LineId Id="1345" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="1586" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.Active.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.Busy.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.ErrorID.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.FileDir.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.FileDir.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.FileName.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.FileName.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.M_CountMaxNumberOfColumns">
      <LineId Id="135" Count="1" />
      <LineId Id="260" Count="1" />
      <LineId Id="137" Count="2" />
      <LineId Id="263" Count="1" />
      <LineId Id="140" Count="42" />
      <LineId Id="186" Count="24" />
      <LineId Id="216" Count="3" />
      <LineId Id="221" Count="34" />
      <LineId Id="269" Count="3" />
      <LineId Id="268" Count="0" />
      <LineId Id="256" Count="1" />
      <LineId Id="262" Count="0" />
      <LineId Id="258" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.M_FieldSeparator">
      <LineId Id="6" Count="1" />
      <LineId Id="20" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.M_FileProperties">
      <LineId Id="6" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.M_ResetParameters">
      <LineId Id="11" Count="4" />
      <LineId Id="22" Count="3" />
      <LineId Id="49" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="51" Count="2" />
      <LineId Id="55" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="26" Count="14" />
      <LineId Id="42" Count="1" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.M_SetNewPath">
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="31" Count="4" />
      <LineId Id="29" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="40" Count="1" />
      <LineId Id="38" Count="1" />
      <LineId Id="24" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_Abort">
      <LineId Id="45" Count="8" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_CreateTable">
      <LineId Id="5" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_FirstCycle">
      <LineId Id="17" Count="1" />
      <LineId Id="39" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="43" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_Init">
      <LineId Id="3" Count="2" />
      <LineId Id="12" Count="1" />
      <LineId Id="6" Count="2" />
      <LineId Id="14" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_InsertIntoTable">
      <LineId Id="6" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_ParseString">
      <LineId Id="183" Count="0" />
      <LineId Id="185" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="187" Count="1" />
      <LineId Id="212" Count="0" />
      <LineId Id="190" Count="2" />
      <LineId Id="142" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_Reset">
      <LineId Id="15" Count="8" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_SelectAll">
      <LineId Id="183" Count="0" />
      <LineId Id="185" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="187" Count="1" />
      <LineId Id="212" Count="0" />
      <LineId Id="190" Count="2" />
      <LineId Id="142" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_SelectPath">
      <LineId Id="35" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="36" Count="7" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MR_SelectRow">
      <LineId Id="12" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="61" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="13" Count="4" />
      <LineId Id="60" Count="0" />
      <LineId Id="18" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_Aborting">
      <LineId Id="5" Count="3" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_Idle">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_Initializing">
      <LineId Id="93" Count="1" />
      <LineId Id="180" Count="0" />
      <LineId Id="95" Count="7" />
      <LineId Id="186" Count="0" />
      <LineId Id="103" Count="1" />
      <LineId Id="183" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="105" Count="5" />
      <LineId Id="187" Count="0" />
      <LineId Id="111" Count="5" />
      <LineId Id="179" Count="0" />
      <LineId Id="117" Count="9" />
      <LineId Id="188" Count="0" />
      <LineId Id="127" Count="1" />
      <LineId Id="189" Count="0" />
      <LineId Id="129" Count="5" />
      <LineId Id="190" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="139" Count="9" />
      <LineId Id="191" Count="0" />
      <LineId Id="149" Count="4" />
      <LineId Id="192" Count="0" />
      <LineId Id="154" Count="9" />
      <LineId Id="195" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="166" Count="1" />
      <LineId Id="197" Count="0" />
      <LineId Id="168" Count="1" />
      <LineId Id="194" Count="0" />
      <LineId Id="171" Count="2" />
      <LineId Id="199" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_MethodDone">
      <LineId Id="12" Count="1" />
      <LineId Id="17" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_Ready">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_Reset">
      <LineId Id="167" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="171" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_SelectAll">
      <LineId Id="5" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="148" Count="2" />
      <LineId Id="24" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="114" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="27" Count="3" />
      <LineId Id="116" Count="3" />
      <LineId Id="31" Count="2" />
      <LineId Id="162" Count="0" />
      <LineId Id="34" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="36" Count="4" />
      <LineId Id="120" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="121" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="44" Count="1" />
      <LineId Id="125" Count="2" />
      <LineId Id="124" Count="0" />
      <LineId Id="46" Count="4" />
      <LineId Id="160" Count="0" />
      <LineId Id="52" Count="3" />
      <LineId Id="159" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="59" Count="2" />
      <LineId Id="157" Count="0" />
      <LineId Id="62" Count="4" />
      <LineId Id="128" Count="0" />
      <LineId Id="67" Count="1" />
      <LineId Id="129" Count="0" />
      <LineId Id="132" Count="1" />
      <LineId Id="69" Count="3" />
      <LineId Id="74" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="79" Count="2" />
      <LineId Id="164" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="154" Count="0" />
      <LineId Id="86" Count="5" />
      <LineId Id="142" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="134" Count="2" />
      <LineId Id="93" Count="3" />
      <LineId Id="140" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="97" Count="2" />
      <LineId Id="153" Count="0" />
      <LineId Id="100" Count="4" />
      <LineId Id="152" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_SelectPath">
      <LineId Id="155" Count="1" />
      <LineId Id="158" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="154" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_SelectRow">
      <LineId Id="24" Count="1" />
      <LineId Id="317" Count="0" />
      <LineId Id="171" Count="2" />
      <LineId Id="30" Count="62" />
      <LineId Id="185" Count="0" />
      <LineId Id="192" Count="1" />
      <LineId Id="191" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="187" Count="1" />
      <LineId Id="190" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="242" Count="1" />
      <LineId Id="312" Count="0" />
      <LineId Id="244" Count="1" />
      <LineId Id="274" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="286" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="251" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="254" Count="1" />
      <LineId Id="276" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="324" Count="0" />
      <LineId Id="257" Count="2" />
      <LineId Id="280" Count="1" />
      <LineId Id="288" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="282" Count="0" />
      <LineId Id="261" Count="1" />
      <LineId Id="241" Count="0" />
      <LineId Id="120" Count="30" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.MS_Uninitialized">
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="FB_CSVDataExchanger.StateMachine">
      <LineId Id="3" Count="15" />
      <LineId Id="22" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="31" Count="2" />
      <LineId Id="37" Count="1" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="39" Count="1" />
      <LineId Id="36" Count="0" />
      <LineId Id="45" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>