<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_UniversalMachine" Id="{386ffbc2-069b-43d2-8911-4d6c9bda2b44}" SpecialFunc="None">
    <Declaration><![CDATA[(* 
:Description: This function block is base for of machine control module in all projects.
*)
FUNCTION_BLOCK ABSTRACT FB_UniversalMachine IMPLEMENTS I_UniversalMachine
VAR
	bFirstCycle		: BOOL := TRUE;							(*  *)
	bInit			: BOOL;									(*  *)
	bAbort 			: BOOL;									(*  *)
	bReset 			: BOOL;									(*  *)
	bSwitchToAuto 	: BOOL;									(*  *)
	bSwitchToManual : BOOL;									(*  *)
	bStepMode		: BOOL;									(*  *)
	
	bActive			: BOOL;									(*  *)
	bRunning		: BOOL;
	bError			: BOOL;									(*  *)
	iErrorID		: UDINT;								(*  *)

	eMachineState 				: E_MachineCtrlState;		(*  *)
	eMachineStateBeforeReset	: E_MachineCtrlState;		(*  *)
	
	(* Tc3 EventLogger - messages *)
	fbMsgInitStarted 			: FB_TcMessage;				(*  *)
	fbMsgInitDone 				: FB_TcMessage;				(*  *)
	fbMsgInAutoMode				: FB_TcMessage;				(*  *)
	fbMsgSwitchingToManual		: FB_TcMessage;				(*  *)
	fbMsgInManualMode			: FB_TcMessage;				(*  *)
	fbMsgSwitcingToAuto			: FB_TcMessage;				(*  *)
	fbMsgAutoStarted			: FB_TcMessage;				(*  *)
	fbMsgAutoStopped			: FB_TcMessage;				(*  *)
	fbMsgReset					: FB_TcMessage;				(*  *)
	fbMsgResetDone				: FB_TcMessage;				(*  *)
	fbMsgAbort					: FB_TcMessage;				(*  *)
	fbMsgAbortDone				: FB_TcMessage;				(*  *)
	
	fbSource					: FB_TcSourceInfo;
	
	hr							: HRESULT;
	
	rtError		: R_TRIG; 					(* Rising edge trigger for function block error *)
END_VAR
(*
Version history:

+-------------+------------+----------------+----------+------------------------------------------+
|Date         | Version    | created under  | Author   | Remark                                   |
+=============+============+================+==========+==========================================+
|2022-02      | 1.0.0.0    | V3.1.4024.22   | ADBO     | Function block created                   |
+-------------+------------+----------------+----------+------------------------------------------+

*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bFirstCycle THEN
	bFirstCycle := FALSE;
	
	fbMsgInitStarted.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.InitStarted, ipSourceInfo := 0);
								
	fbMsgInitDone.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.InitDone, ipSourceInfo := 0);
								
	fbMsgInAutoMode.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.InAutoMode, ipSourceInfo := 0);
								
	fbMsgSwitchingToManual.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.SwitchingToManual, ipSourceInfo := 0);
								
	fbMsgInManualMode.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.InManualMode, ipSourceInfo := 0);
								
	fbMsgAutoStarted.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.AutoStarted, ipSourceInfo := 0);
								
	fbMsgAutoStopped.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.AutoStopped, ipSourceInfo := 0);
								
	fbMsgReset.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.Reset, ipSourceInfo := 0);
								
	fbMsgResetDone.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.ResetDone, ipSourceInfo := 0);
								
	fbMsgAbort.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.Abort, ipSourceInfo := 0);
								
	fbMsgAbortDone.CreateEx( stEventEntry := TC_EVENTS.ShellMachineEventClass.AbortDone, ipSourceInfo := 0);
	
END_IF

(* Set status flags *)
bActive := eMachineState >= MACHINE_STATE_AUTO;

(* Report errors that occur *)
rtError(CLK:=bError);

IF rtError.Q THEN 
	fbMachineLogger.MR_AddLogs(FUN_MergeStrings5('Universal_Machine', ' : Error occured (error ID: ', UDINT_TO_STRING(iErrorID), ')', ''));
END_IF

(* Run standard state machine *)
StateMachine();]]></ST>
    </Implementation>
    <Folder Name="Properties" Id="{4f405721-e98a-438c-b1b8-70f1ff23ad46}">
      <Folder Name="Status" Id="{bf90c22b-fa6b-4161-a3d9-3548eb6967b9}" />
    </Folder>
    <Folder Name="Requests" Id="{78844184-9b04-407a-a8b4-da95d0b19198}" />
    <Folder Name="StateMachine" Id="{dc17979b-071e-4b4f-b510-efdc8b5c5bae}" />
    <Property Name="Active" Id="{98dd2606-5917-4848-9927-66eb275acddb}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Active : REFERENCE TO BOOL]]></Declaration>
      <Get Name="Get" Id="{4fb3efc3-09c1-4a5f-b547-a4104e602411}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Active REF= bActive;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{5c0e441d-f083-4f93-9d5b-417d3ae28ce4}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Error : REFERENCE TO BOOL]]></Declaration>
      <Get Name="Get" Id="{11ce18f6-84c2-4e2e-92b8-36ed6176116d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error REF= bError;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MR_Abort" Id="{9908fb8c-93d5-4057-856d-b6ce8ce61d5a}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Abort : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eMachineState > MACHINE_STATE_UNINITIALIZED THEN
	bAbort := FALSE;
	MR_Abort := FALSE;
	fbMsgAbort.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : abort requested'));	
	eMachineState := MACHINE_STATE_ABORTING;
	
ELSIF eMachineState = MACHINE_STATE_UNINITIALIZED THEN
	bAbort := TRUE;
	MR_Abort := TRUE;
	fbMsgAbortDone.Send(0);	
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : abort done'));	
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Init" Id="{5ed9b31f-87ca-45bf-bd3c-a464dc949c54}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eMachineState = MACHINE_STATE_UNINITIALIZED THEN
	bInit := TRUE;
	MR_Init := FALSE;
	fbMsgInitStarted.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : initialization requested'));	
	eMachineState := MACHINE_STATE_INITIALIZING;
	
ELSIF eMachineState = MACHINE_STATE_AUTO AND bInit THEN
	bInit := FALSE;
	MR_Init := TRUE;
	fbMsgInitDone.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : initialization done'));	

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Reset" Id="{bbe0d04f-5343-4233-a268-971b1c5c1383}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eMachineState = MACHINE_STATE_AUTO THEN
	bReset := TRUE;
	MR_Reset := FALSE;
	fbMsgReset.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : reset requested'));
	eMachineState := MACHINE_STATE_RESET;
	
ELSIF eMachineState = MACHINE_STATE_RESET_DONE THEN
	bReset := FALSE;
	MR_Reset := TRUE;
	fbMsgResetDone.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : reset done'));

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Start" Id="{22412682-3f87-499f-aad0-783e45fa1ecb}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD ABSTRACT MR_Start : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Stop" Id="{bbc82cc7-b4b5-4350-8c12-b7e730cf9583}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD ABSTRACT MR_Stop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_SwitchToAuto" Id="{9a89d947-1fed-4801-aba9-1113cb13bb82}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_SwitchToAuto : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eMachineState = MACHINE_STATE_MANUAL THEN
	bSwitchToAuto := TRUE;
	MR_SwitchToAuto := FALSE;
	fbMsgSwitcingToAuto.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : switching to auto requested'));
	eMachineState := MACHINE_STATE_MANUAL_TO_AUTO;
	
ELSIF eMachineState = MACHINE_STATE_AUTO THEN
	bSwitchToAuto := FALSE;
	MR_SwitchToAuto := TRUE;
	fbMsgInAutoMode.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : switching to auto done'));

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_SwitchToManual" Id="{d25c6912-f7ee-4b68-9c12-7d21bc3928b0}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_SwitchToManual : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eMachineState = MACHINE_STATE_AUTO THEN
	bSwitchToManual := TRUE;
	MR_SwitchToManual := FALSE;
	fbMsgSwitchingToManual.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : switching to manual requested'));
	eMachineState := MACHINE_STATE_AUTO_TO_MANUAL;
	
ELSIF eMachineState = MACHINE_STATE_MANUAL THEN
	bSwitchToManual := FALSE;
	MR_SwitchToManual := TRUE;
	fbMsgInManualMode.Send(0);
	fbMachineLogger.MR_AddLogs(CONCAT('Main machine controller',' : switching to manual done'));

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Aborting" Id="{53702d47-c2db-4c54-aa18-4ccdca9187a5}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Aborting
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Auto" Id="{af634f12-05be-4c3d-99c8-232c02d50ac1}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Auto
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_AutoToManual" Id="{6fcfae0f-2c8c-4e60-827c-600300e8c9b6}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_AutoToManual
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Emergency" Id="{1466adb9-459b-4a35-8ab1-3469f16ecb6f}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Emergency
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Initializing" Id="{b6916577-76e6-4a49-9d89-7da2a5bb50eb}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Initializing
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Manual" Id="{a66cca89-7a6d-4180-8171-6d52d93c3ec3}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Manual
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_ManualToAuto" Id="{6cfd1bfa-2ab6-403c-abdf-c0b5189e17c0}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_ManualToAuto
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_ReadyInitialized" Id="{a0c54efd-8fb9-404a-b4db-e53d6e144c27}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_ReadyInitialized
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Reset" Id="{bef968e8-0e5f-43c9-a00c-c1efe516aa9a}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_ResetDone" Id="{1e7b3f9e-004a-4d5c-920c-4a6e60abbebc}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_ResetDone
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Uninitialized" Id="{9b80c794-7b60-4906-9f4e-0f03321f598c}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT MS_Uninitialized
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="Running" Id="{7387d11f-4cbc-4f9e-80ab-0561652b8d54}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Running : REFERENCE TO BOOL]]></Declaration>
      <Get Name="Get" Id="{2e3f1e9a-3f3f-4eb6-a6b8-4863371811ea}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Running REF= bRunning;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="State" Id="{e0150bb9-ec75-406c-9879-8f342394bc26}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY State : REFERENCE TO E_MachineCtrlState]]></Declaration>
      <Get Name="Get" Id="{d9c57be3-b5c3-4583-8426-1967b7c63860}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[State REF= eMachineState;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="StateMachine" Id="{438e641d-fa87-459d-8e1b-dfe891049873}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED StateMachine
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eMachineState OF
	(* Machine is not ready to work *)
	MACHINE_STATE_UNINITIALIZED:
		MS_Uninitialized();
		
	(* Initialization in progress *)
	MACHINE_STATE_INITIALIZING:
		MS_Initializing();
		
	(* Initialization finished *)
	MACHINE_STATE_READY_INITIALIZED:
		MS_ReadyInitialized();
	
	(* Machine in automatic mode *)
	MACHINE_STATE_AUTO:
		MS_Auto();
	
	(* Safe switch from automatic to manual mode*)
	MACHINE_STATE_AUTO_TO_MANUAL:
		MS_AutoToManual();
	
	(* Machie in manual mode *)
	MACHINE_STATE_MANUAL:
		MS_Manual();
	
	(* Safe switch from manual to automatic mode *)
	MACHINE_STATE_MANUAL_TO_AUTO:
		MS_ManualToAuto();
		
	(* Safe switch from manual to automatic mode *)
	MACHINE_STATE_RESET:
		MS_Reset();
		
	(* Safe switch from manual to automatic mode *)
	MACHINE_STATE_RESET_DONE:
		MS_ResetDone();
		
	(* Safe deintialization of machine *)
	MACHINE_STATE_ABORTING:
		MS_Aborting();
		
	(* Machine safety mode *)
	MACHINE_STATE_EMERGENCY:
		MS_Emergency();
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_UniversalMachine">
      <LineId Id="3" Count="37" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.Active.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_Abort">
      <LineId Id="3" Count="12" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_Init">
      <LineId Id="3" Count="12" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_Reset">
      <LineId Id="3" Count="2" />
      <LineId Id="7" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="9" Count="7" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_Start">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_Stop">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_SwitchToAuto">
      <LineId Id="3" Count="12" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MR_SwitchToManual">
      <LineId Id="3" Count="12" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Aborting">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Auto">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_AutoToManual">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Emergency">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Initializing">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Manual">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_ManualToAuto">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_ReadyInitialized">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Reset">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_ResetDone">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.MS_Uninitialized">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.Running.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.State.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_UniversalMachine.StateMachine">
      <LineId Id="3" Count="44" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>